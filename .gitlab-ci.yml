variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  PROJECT_NAME: real_medium

.default_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
    - when: never

.parallel:
  parallel:
    matrix:
      - BUILD_TYPE: release

stages:
  - build

build:
  image: ghcr.io/userver-framework/ubuntu-userver-build-base:v1
  stage: build
  script:  
    - echo "working in $CI_BUILDS_DIR"
    - useradd -d $CI_BUILDS_DIR/$GITLAB_USER_LOGIN -g users -M -N builder
    - chown -R builder:users ..
    - sudo -u builder make build-$BUILD_TYPE && cmake --build build_$BUILD_TYPE --target ${PROJECT_NAME}_unittest
   # - build_$BUILD_TYPE/tests/venv-testsuite-$PROJECT_NAME/bin/python3 -m pip freeze > build_$BUILD_TYPE/tests/requirements.txt
   # - build_$BUILD_TYPE/tests/venv-testsuite-$PROJECT_NAME/bin/python3 -m pip freeze | xargs build_$BUILD_TYPE/tests/venv-testsuite-$PROJECT_NAME/bin/python3 -m pip uninstall -y
    - XZ_OPT=-9T0 tar -Jcvfx build_$BUILD_TYPE.tar.xz 
      configs/static_config.yaml
      build_$BUILD_TYPE/$PROJECT_NAME 
  #    build_$BUILD_TYPE/${PROJECT_NAME}_unittest
  #    build_$BUILD_TYPE/CTestTestfile.cmake
  #    build_$BUILD_TYPE/tests/runtests-testsuite-$PROJECT_NAME
  #    build_$BUILD_TYPE/tests/CTestTestfile.cmake
  #    build_$BUILD_TYPE/tests/venv-testsuite-$PROJECT_NAME/
  #    build_$BUILD_TYPE/tests/requirements.txt
  parallel: !reference [.parallel,parallel]
  artifacts:
    paths:
      - build_$BUILD_TYPE.tar.xz
    expire_in: 1 day
  rules:
    - !reference [.default_rules, rules]